{"version":3,"sources":["webpack:///./utils/eventPromise.js","webpack:///./utils/animationEnd.js","webpack:////Users/davidmaxwell-wood/Sites/_MUD/PQRST/SGFG/node_modules/core-js/modules/es6.object.keys.js","webpack:////Users/davidmaxwell-wood/Sites/_MUD/PQRST/SGFG/node_modules/core-js/modules/_object-sap.js","webpack:///./ui/Dropdown.js"],"names":["__webpack_exports__","event","element","callback","complete","Promise","resolve","addEventListener","done","e","stopPropagation","removeEventListener","target","bind","ramda_src_memoizeWith__WEBPACK_IMPORTED_MODULE_4___default","ramda_src_identity__WEBPACK_IMPORTED_MODULE_3___default","a","types","arguments","length","undefined","OTransition","WebkitTransition","MozTransition","transition","OAnimation","WebkitAnimation","MozAnimation","animation","elem","document","createElement","Object","keys","reduce","prev","trans","style","toObject","__webpack_require__","$keys","it","$export","core","fails","module","exports","KEY","exec","fn","exp","S","F","DropDown","el","options","key","_this","this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4___default","updateText","interceptLinks","closeOnClick","$$events","attachAll","destroy","off","click [data-dropdown-button]","blur [data-dropdown-item]","click [data-dropdown-item]","click [data-dropdown-reset]","preventDefault","action","machine","state","CLICK","setTimeout","activeElement","$button","closest","close","elm","_this$options","$selectedItem","classList","remove","emit","$label","text","textContent","trim","then","$reset","display","add","originalText","_utils_eventPromise__WEBPACK_IMPORTED_MODULE_6__","_utils_animationEnd__WEBPACK_IMPORTED_MODULE_7__","$dropdown","$items","focus","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_2___default","defaults","assign","mitt__WEBPACK_IMPORTED_MODULE_8__","$el","_core_modules_createEvents__WEBPACK_IMPORTED_MODULE_5__","call","events","querySelector","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default","querySelectorAll","open"],"mappings":"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","file":"ui-Dropdown.bundle.1544006707924.js","sourcesContent":["export default (event, element, callback) => {\n\tlet complete = false\n\n\tconst done = (resolve, e) => {\n\t\te.stopPropagation()\n\t\telement.removeEventListener(event, done)\n\t\tif (e.target === element && !complete) {\n\t\t\tcomplete = true\n\t\t\tresolve()\n\t\t}\n\t}\n\n\treturn new Promise(resolve => {\n\t\tcallback()\n\t\telement.addEventListener(event, done.bind(null, resolve))\n\t})\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","import * as R from 'ramda'\n\nexport default R.memoizeWith(R.identity, (type = 'transition') => {\n\tconst types =\n\t\ttype === 'transition'\n\t\t\t? {\n\t\t\t\tOTransition: 'oTransitionEnd',\n\t\t\t\tWebkitTransition: 'webkitTransitionEnd',\n\t\t\t\tMozTransition: 'transitionend',\n\t\t\t\ttransition: 'transitionend'\n\t\t\t  }\n\t\t\t: {\n\t\t\t\tOAnimation: 'oAnimationEnd',\n\t\t\t\tWebkitAnimation: 'webkitAnimationEnd',\n\t\t\t\tMozAnimation: 'animationend',\n\t\t\t\tanimation: 'animationend'\n\t\t\t  }\n\n\tconst elem = document.createElement('div')\n\n\treturn Object.keys(types).reduce(\n\t\t(prev, trans) => (undefined !== elem.style[trans] ? types[trans] : prev),\n\t\t''\n\t)\n})\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","import { createEvents } from '@/core/modules/createEvents'\nimport eventPromise from '@/utils/eventPromise'\nimport animationEnd from '@/utils/animationEnd'\nimport mitt from 'mitt'\n\n/** *\n * @namespace Dropdown\n * @class Dropdown\n * @description Handles dropdowns\n *\n * @example\n *\n * Required markup:\n *\n * html:\n * <div data-ui=\"Dropdown\" data-ui-options='{\"update-text\": true, \"intercept-links\": true}' data-ui-key=\"downloads-dropdown\">\n * \t<button data-dropdown-button>\n * \t\t<span class=\"mr-1\" data-dropdown-text>View all products</span>\n * \t</button>\n * \t<div data-dropdown-menu>\n * \t\t<ul class=\"list-reset\">\n * \t\t\t<li data-dropdown-reset role=\"button\" tabindex=\"0\">Reset</li>\n * \t\t\t<li>\n * \t\t\t\t<a data-dropdown-item>item</a>\n * \t\t\t</li>\n * \t\t\t<li>\n * \t\t\t\t<a data-dropdown-item>item</a>\n * \t\t\t</li>\n * \t\t\t<li>\n * \t\t\t\t<a data-dropdown-item>item</a>\n * \t\t\t</li>\n * \t\t</ul>\n * \t</div>\n * </div>\n *\n * @param {HTMLElement} el - node to bind to\n * @param {Object} options - options\n * @param {String} key - key name\n *\n * @property {Boolean} options.updateText - should the dropdown text update to reflect the selected item\n * @property {Boolean} options.interceptLinks - should any links called prevent default\n * @property {Boolean} options.closeOnClick - should the dropdown close when an item is clicked\n *\n * @return {DropDown}\n */\n\nexport default class DropDown {\n\tdefaults = {\n\t\tupdateText: false,\n\t\tinterceptLinks: false,\n\t\tcloseOnClick: true\n\t}\n\n\tconstructor(el, options, key) {\n\t\tthis.options = { ...this.defaults, ...options }\n\t\tthis.key = key\n\n\t\tObject.assign(this, mitt())\n\n\t\tthis.$el = el\n\t\t// bind the dom events\n\t\tthis.$$events = createEvents.call(this, this.$el, this.events)\n\n\t\tthis.$reset = this.$el.querySelector('[data-dropdown-reset]')\n\t\tthis.$label = this.$el.querySelector('[data-dropdown-text]')\n\t\tthis.$button = this.$el.querySelector('[data-dropdown-button]')\n\t\tthis.$dropdown = this.$el.querySelector('[data-dropdown-menu]')\n\t\tthis.$items = [...this.$el.querySelectorAll('[data-dropdown-item]')]\n\n\t\tif (this.$label) {\n\t\t\tthis.originalText = this.$label.textContent\n\t\t}\n\n\t\t// the state machine... will always invoke the next stage of state\n\t\t// https://en.wikipedia.org/wiki/Finite-state_machine\n\t\tthis.machine = {\n\t\t\topen: { CLICK: 'close' },\n\t\t\tclose: { CLICK: 'open' }\n\t\t}\n\n\t\t// set the inital state\n\t\tthis.state = 'close'\n\n\t\tthis.$selectedItem = null\n\t}\n\n\t/** *\n\t * @memberof Dropdown\n\t * @method mount\n\t * @desc Add the events\n\t *\n\t * @return {void}\n\t */\n\tmount = () => {\n\t\tthis.$$events.attachAll()\n\t}\n\n\t/** *\n\t * @method mount\n\t * @memberof Dropdown\n\t * @desc removes the events\n\t *\n\t * @return {void}\n\t */\n\tunmount = () => {\n\t\tthis.$$events.destroy()\n\t\tthis.off('*')\n\t}\n\n\tevents = {\n\t\t'click [data-dropdown-button]': 'onClick',\n\t\t'blur [data-dropdown-item]': 'onBlur',\n\t\t'click [data-dropdown-item]': 'onItemClick',\n\t\t'click [data-dropdown-reset]': 'onResetClick'\n\t}\n\n\t/** *\n\t * @memberof Dropdown\n\t * @method onClick\n\t * @desc the click event...\n\t * @param {Object} e : the event object\n\t *\n\t * @return {void}\n\t */\n\tonClick = e => {\n\t\te.preventDefault()\n\n\t\tconst action = this.machine[this.state].CLICK\n\n\t\tthis[action]()\n\n\t\tthis.state = action\n\t}\n\n\t/** *\n\t * @memberof Dropdown\n\t * @method onBlur\n\t * @desc the blur event... this is used to close the dropdown when clicking outside\n\t *\n\t * @return {void}\n\t */\n\n\tonBlur = () => {\n\t\t// must be wrapped in a setTimeout\n\t\tsetTimeout(() => {\n\t\t\t// if the active node is the button, do nothing\n\t\t\tif (document.activeElement === this.$button) return\n\n\t\t\t// if the active node is outside of the dropdown\n\t\t\t// close it, reset the state\n\t\t\tif (!document.activeElement.closest('[data-dropdown-menu]')) {\n\t\t\t\tthis.state = 'close'\n\t\t\t\tthis.close()\n\t\t\t}\n\t\t})\n\t}\n\n\t/** *\n\t * @memberof Dropdown\n\t * @method onItemClick\n\t * @desc handle various options, this is only called when intercept links is true\n\t * @param {Object} e : the event object\n\t * @param {HTMLElement} elm : the element clicked\n\t *\n\t * @return {void}\n\t */\n\tonItemClick = (e, elm) => {\n\t\tconst { interceptLinks, updateText, closeOnClick } = this.options\n\n\t\tif (this.$selectedItem && this.$selectedItem !== elm) {\n\t\t\tthis.$selectedItem.classList.remove('is-selected')\n\t\t}\n\n\t\tif (interceptLinks) {\n\t\t\te.preventDefault()\n\t\t\tthis.emit('dropdown:item:clicked', { elm, key: this.key })\n\t\t}\n\n\t\tif (updateText && this.$label) {\n\t\t\tconst text = elm.textContent.trim()\n\t\t\tthis.$label.textContent = text\n\t\t}\n\n\t\tif (closeOnClick) {\n\t\t\tthis.close().then(() => {\n\t\t\t\tif (updateText && this.$label) {\n\t\t\t\t\tthis.$reset.style.display = 'block'\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\telm.classList.add('is-selected')\n\n\t\tthis.$selectedItem = elm\n\t}\n\n\t/** *\n\t * @memberof Dropdown\n\t * @method onResetClick\n\t * @desc reset the dropdown label text and close\n\t * @param {Object} e : the event object\n\t *\n\t * @return {void}\n\t */\n\n\tonResetClick = e => {\n\t\te.preventDefault()\n\t\tif (this.$label) this.$label.textContent = this.originalText\n\n\t\tif (this.$selectedItem) {\n\t\t\tthis.$selectedItem.classList.remove('is-selected')\n\t\t}\n\n\t\tthis.close().then(() => {\n\t\t\tthis.$reset.style.display = ''\n\t\t})\n\t}\n\n\t/** *\n\t * @memberof Dropdown\n\t * @method open\n\t * @desc open the dropdown, once the animation has finished set the focus state\n\t *\n\t * @return {Promise}\n\t */\n\n\topen = () => {\n\t\tthis.$button.classList.add('is-active')\n\n\t\treturn eventPromise(animationEnd('transition'), this.$dropdown, () => {\n\t\t\tthis.$dropdown.classList.add('is-open')\n\t\t}).then(() => {\n\t\t\tthis.$items[0].focus()\n\t\t})\n\t}\n\n\t/** *\n\t * @memberof Dropdown\n\t * @method close\n\t * @desc close the dropdown\n\t *\n\t * @return {void}\n\t */\n\n\tclose = () =>\n\t\teventPromise(animationEnd('transition'), this.$dropdown, () => {\n\t\t\tthis.$button.classList.remove('is-active')\n\t\t\tthis.$dropdown.classList.remove('is-open')\n\t\t\tthis.state = 'close'\n\t\t})\n}\n\n\nif (module.hot) {module.hot.accept(function(err) {\nif (err) {\nconsole.error(err);\n}\n});\n}\n"],"sourceRoot":""}